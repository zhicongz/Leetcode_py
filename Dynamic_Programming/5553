5553. Distribute Repeating Integers

```
class Solution:
    def canDistribute(self, nums: List[int], quantity: List[int]) -> bool:
        m = len(quantity)
        d = collections.Counter(nums)
        stack = sorted(d.values(), reverse = True)        
        if len(stack) >m: stack = stack[:m]
        n = len(stack)
        
        dp = [[-1]*(1<<m) for _ in range(n+1)]
        dp[0][0] = 0
        
        for i in range(n):
            for j in range(1<<m):
                if dp[i][j] >= 0: dp[i+1][j] = stack[i] ## stack[i] not being used
                for k in range(m): ## k th customer
                    if j & 1<<k == 0: dp[i+1][j|1<<k] = max(dp[i+1][j|1<<k], dp[i+1][j]-quantity[k])
                                    
            if dp[i+1][-1] >= 0: return True
        return False
```
