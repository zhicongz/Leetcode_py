1228. Missing Number In Arithmetic Progression

In some array arr, the values were in arithmetic progression: the values `r[i+1] - arr[i]` are all equal for every `0 <= i < arr.length - 1`.

Then, a value from arr was removed that was not the first or last value in the array.

Return the removed value.


Example 1:

Input: arr = [5,7,11,13]
Output: 9
Explanation: The previous array was [5,7,9,11,13].


Example 2:

Input: arr = [15,13,12]
Output: 14
Explanation: The previous array was [15,14,13,12].

```
class Solution:
    def missingNumber(self, arr: List[int]) -> int:
        if arr[0] == arr[-1]:
            return(arr[0])
        
        if arr[0] < arr[-1]:            
            step = min(arr[1]-arr[0],arr[-1]-arr[-2])
        
        if arr[0] > arr[-1]:
            step = max(arr[1]-arr[0],arr[-1]-arr[-2])
            
        for i in range(1,len(arr)):
            if arr[i]!=arr[i-1]+step:
                return(arr[i]-step)
```                
