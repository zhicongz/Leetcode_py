Unique Binary Search Trees II

```
class Solution:
    def generateTrees(self, n: int) -> List[Optional[TreeNode]]:
        
        @lru_cache(n**2)
        def foo(a,b): # take values from [a,b)
            if a == b: return [None]
            res = []
            for i in range(a,b):
                l, r = foo(a,i), foo(i+1,b)
                for x in l:
                    for y in r:
                        root = TreeNode(i)
                        root.left = x
                        root.right = y
                        res.append(root)
            return res
               
        return foo(1,n+1)
```
